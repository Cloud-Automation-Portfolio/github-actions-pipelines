name: deploy-to-aks

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  id-token: write   # for OIDC
  contents: read

env:
  RG: ${{ secrets.AZURE_RESOURCE_GROUP }}
  AKS: ${{ secrets.AKS_CLUSTER_NAME }}
  ACR: ${{ secrets.ACR_NAME }}
  NAMESPACE: lab8
  RELEASE: lab8
  IMAGE: ghcr.io/${{ github.repository }}/lab8:sha-${{ github.sha }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: aks-staging
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Get AKS credentials
        uses: azure/aks-set-context@v4
        with:
          resource-group: ${{ env.RG }}
          cluster-name: ${{ env.AKS }}

      - name: Create namespace (idempotent)
        run: |
          kubectl get ns $NAMESPACE || kubectl create ns $NAMESPACE

      - name: Helm repo + upgrade
        run: |
          helm upgrade --install $RELEASE ./helm \
            --namespace $NAMESPACE \
            --set image.repository=${{ env.IMAGE%%:* }} \
            --set image.tag=${{ env.IMAGE##*: }} \
            --wait --timeout 5m

      - name: Show rollout + service
        run: |
          kubectl rollout status deploy/$RELEASE -n $NAMESPACE
          kubectl get pods -n $NAMESPACE -o wide
          kubectl get svc $RELEASE -n $NAMESPACE -o wide
          # If Service=LoadBalancer, print URL:
          IP=$(kubectl get svc $RELEASE -n $NAMESPACE -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
          if [ -n "$IP" ]; then
            echo "APP_URL=http://$IP" | tee -a $GITHUB_OUTPUT
          fi

      - name: Upload kubectl output (artifact)
        uses: actions/upload-artifact@v4
        with:
          name: aks_kubectl_output
          path: |
            **/*.yaml
